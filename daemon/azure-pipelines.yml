# Documentation: https://wiki.unvanquished.net/wiki/Continuous_integration

jobs:
  - job: Mac
    pool:
      vmImage: 'macOS-11'
    steps:
    - bash: |
        set -e
        git submodule update --init --recursive
        cmake --version
        cmake -Wdev -Wdeprecated -DUSE_PRECOMPILED_HEADER=0 -DUSE_WERROR=1 -DBE_VERBOSE=1 -DCMAKE_BUILD_TYPE=Release -DBUILD_DUMMY_APP=1 -DBUILD_TESTS=1 -H. -Bbuild
        cmake --build build -- -j`sysctl -n hw.logicalcpu`
      displayName: 'Build'
    - bash: |
        set -e
        # Use dummyapp so we don't need dpk's
        build/test-dummyapp -pakpath pkg
      displayName: 'Test'

  - job: Linux
    pool:
      vmImage: 'ubuntu-20.04'
    strategy:
      matrix:
        GCC:
          C_COMPILER: gcc
          CXX_COMPILER: g++
          EXTRA_PACKAGES:
          EXTRA_INSTALLS:
          TOOLCHAIN_FILE:
        Clang:
          C_COMPILER: clang
          CXX_COMPILER: clang++
          EXTRA_PACKAGES:
          EXTRA_INSTALLS:
          TOOLCHAIN_FILE:
        Mingw:
          C_COMPILER: x86_64-w64-mingw32-gcc
          CXX_COMPILER: x86_64-w64-mingw32-g++
          EXTRA_PACKAGES: gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 mingw-w64-x86-64-dev
          EXTRA_INSTALLS: sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix ; sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix
          TOOLCHAIN_FILE: cmake/cross-toolchain-mingw64.cmake

    steps:
    - bash: |
        set -e
        sudo apt-get update
        sudo apt-get -y -q --no-install-recommends install zlib1g-dev libncursesw5-dev libgeoip-dev nettle-dev libgmp-dev libcurl4-gnutls-dev libsdl2-dev libogg-dev libvorbis-dev libopusfile-dev libwebp-dev libjpeg8-dev libpng-dev libfreetype6-dev libglew-dev libopenal-dev liblua5.2-dev ninja-build $(EXTRA_PACKAGES)
        $(EXTRA_INSTALLS)
      displayName: 'Install deps'
    - bash: |
        set -e
        git submodule update --init --recursive
        cmake --version
        cmake -G "Ninja" -Wdev -Wdeprecated -DCMAKE_TOOLCHAIN_FILE=$(TOOLCHAIN_FILE) -DCMAKE_C_COMPILER=$(C_COMPILER) -DCMAKE_CXX_COMPILER=$(CXX_COMPILER) -DUSE_PRECOMPILED_HEADER=0 -DUSE_WERROR=1 -DBE_VERBOSE=1 -DBUILD_DUMMY_APP=1 -DBUILD_TESTS=1 -DCMAKE_BUILD_TYPE=Release -H. -Bbuild
        cmake --build build -- -j`nproc`
      displayName: 'Build'
    - bash: |
        set -e
        # Use dummyapp so we don't need dpk's
        build/test-dummyapp -pakpath pkg
      condition: "and(succeeded(), eq(variables.TOOLCHAIN_FILE, ''))"
      displayName: 'Test'
